function lockChangeAlert(){document.pointerLockElement===canvas||document.mozPointerLockElement===canvas||document.webkitPointerLockElement===canvas?(console.log("The pointer lock status is now locked"),canvas.addEventListener("mousemove",onMouseMove,!1),canvas.addEventListener("click",clickInteract,!1),window.addEventListener("keyup",function(o){Key.onKeyup(o)},!1),window.addEventListener("keydown",function(o){Key.onKeydown(o)},!1)):(console.log("The pointer lock status is now unlocked"),canvas.removeEventListener("mousemove",onMouseMove,!1),canvas.removeEventListener("click",clickInteract,!1),window.removeEventListener("keyup",function(o){Key.onKeyup(o)},!1),window.removeEventListener("keydown",function(o){Key.onKeydown(o)},!1))}function clickInteract(){"block"==mode&&(bullets[bullarrindexnum]=new THREE.Mesh(bullblockgeometry,bullblockmaterial),scene.add(bullets[bullarrindexnum]),bullets[bullarrindexnum].rotation.copy(camera.rotation),bullets[bullarrindexnum].position.copy(camera.position),bullets[bullarrindexnum].castShadow=!0,bullets[bullarrindexnum].receiveShadow=!0,modes[bullarrindexnum]="block",bullarrindexnum++),"port1"==mode&&(bullets[bullarrindexnum]=new THREE.Mesh(bullport1geometry,bullport1material),scene.add(bullets[bullarrindexnum]),bullets[bullarrindexnum].rotation.copy(camera.rotation),bullets[bullarrindexnum].position.copy(camera.position),bullets[bullarrindexnum].castShadow=!0,bullets[bullarrindexnum].receiveShadow=!0,modes[bullarrindexnum]="port1",bullarrindexnum++),"port2"==mode&&(bullets[bullarrindexnum]=new THREE.Mesh(bullport2geometry,bullport2material),scene.add(bullets[bullarrindexnum]),bullets[bullarrindexnum].rotation.copy(camera.rotation),bullets[bullarrindexnum].position.copy(camera.position),bullets[bullarrindexnum].castShadow=!0,bullets[bullarrindexnum].receiveShadow=!0,modes[bullarrindexnum]="port2",bullarrindexnum++),"restore"==mode&&(bullets[bullarrindexnum]=new THREE.Mesh(bullrestoregeometry,bullrestorematerial),scene.add(bullets[bullarrindexnum]),bullets[bullarrindexnum].rotation.copy(camera.rotation),bullets[bullarrindexnum].position.copy(camera.position),bullets[bullarrindexnum].castShadow=!0,bullets[bullarrindexnum].receiveShadow=!0,modes[bullarrindexnum]="restore",bullarrindexnum++),"destroy"==mode&&(bullets[bullarrindexnum]=new THREE.Mesh(bulldestroygeometry,bulldestroymaterial),scene.add(bullets[bullarrindexnum]),bullets[bullarrindexnum].rotation.copy(camera.rotation),bullets[bullarrindexnum].position.copy(camera.position),bullets[bullarrindexnum].castShadow=!0,bullets[bullarrindexnum].receiveShadow=!0,modes[bullarrindexnum]="destroy",bullarrindexnum++)}function testCol(o,t,e){for(voxcount=0;voxcount<voxels.length;voxcount++)if(e>voxels[voxcount].position.z-.5&&e<voxels[voxcount].position.z+.5&&o>voxels[voxcount].position.x-.5&&o<voxels[voxcount].position.x+.5&&t>voxels[voxcount].position.y-.5&&t<voxels[voxcount].position.y+.5)return!1;return!0}function findCol(o,t,e){for(voxcount=0;voxcount<voxels.length;voxcount++)if(e>voxels[voxcount].position.z-.5&&e<voxels[voxcount].position.z+.5&&o>voxels[voxcount].position.x-.5&&o<voxels[voxcount].position.x+.5&&t>voxels[voxcount].position.y-.5&&t<voxels[voxcount].position.y+.5)return voxcount}function initialRender(){for(voxarrindexnum=0,z=0;z<map.length;z++)for(x=0;x<map[z].length;x++)for(altitude=map[z][x],y=0;altitude>y;y++)specialColours(),scene.add(voxels[voxarrindnum]),voxels[voxarrindnum].position.x=x,voxels[voxarrindnum].position.y=y,voxels[voxarrindnum].position.z=z,voxels[voxarrindnum].castShadow=!0,voxels[voxarrindnum].receiveShadow=!0,voxarrindnum++}function specialColours(){return 0==colourOrder?(voxels[voxarrindnum]=new THREE.Mesh(voxgeometry,voxmaterial1),colourOrder++,initColours[voxarrindnum]=0,null):1==colourOrder?(voxels[voxarrindnum]=new THREE.Mesh(voxgeometry,voxmaterial2),colourOrder++,initColours[voxarrindnum]=1,null):2==colourOrder?(voxels[voxarrindnum]=new THREE.Mesh(voxgeometry,voxmaterial3),colourOrder=0,initColours[voxarrindnum]=2,null):void 0}function restoration(o){0==initColours[o]&&(voxels[o].material=voxmaterial1),1==initColours[o]&&(voxels[o].material=voxmaterial2),2==initColours[o]&&(voxels[o].material=voxmaterial3),3==initColours[o]&&(voxels[o].material=voxmaterial)}var scene=new THREE.Scene,camera=new THREE.PerspectiveCamera(75,window.innerWidth/window.innerHeight,.1,1e3),renderer=new THREE.WebGLRenderer;renderer.setSize(window.innerWidth,window.innerHeight),renderer.setClearColor(16034422,1),renderer.shadowMapEnabled=!0,renderer.shadowMapSoft=!1,document.body.appendChild(renderer.domElement);var canvas=document.querySelector("canvas"),sunAngle=0,sun=new THREE.DirectionalLight(16777215,1),sunneg=new THREE.DirectionalLight(16777215,1),sunpos=new THREE.DirectionalLight(16777215,1),voxgeometry=new THREE.BoxGeometry(1,1,1),voxmaterial=new THREE.MeshLambertMaterial({color:8947848}),voxmaterial1=new THREE.MeshLambertMaterial({color:15756609}),voxmaterial2=new THREE.MeshLambertMaterial({color:13397582}),voxmaterial3=new THREE.MeshLambertMaterial({color:12862232}),voxarrindnum=0,altitude=0,colourOrder=0,initColours=[],map=[[Math.round(4*Math.random()+1),Math.round(4*Math.random()+1),Math.round(4*Math.random()+1),Math.round(4*Math.random()+1),Math.round(4*Math.random()+1),Math.round(4*Math.random()+1),Math.round(4*Math.random()+1),Math.round(4*Math.random()+1),Math.round(4*Math.random()+1),Math.round(4*Math.random()+1)],[Math.round(4*Math.random()+1),Math.round(4*Math.random()+1),Math.round(4*Math.random()+1),Math.round(4*Math.random()+1),Math.round(4*Math.random()+1),Math.round(4*Math.random()+1),Math.round(4*Math.random()+1),Math.round(4*Math.random()+1),Math.round(4*Math.random()+1),Math.round(4*Math.random()+1)],[Math.round(4*Math.random()+1),Math.round(4*Math.random()+1),Math.round(4*Math.random()+1),Math.round(4*Math.random()+1),Math.round(4*Math.random()+1),Math.round(4*Math.random()+1),Math.round(4*Math.random()+1),Math.round(4*Math.random()+1),Math.round(4*Math.random()+1),Math.round(4*Math.random()+1)],[Math.round(4*Math.random()+1),Math.round(4*Math.random()+1),Math.round(4*Math.random()+1),Math.round(4*Math.random()+1),Math.round(4*Math.random()+1),Math.round(4*Math.random()+1),Math.round(4*Math.random()+1),Math.round(4*Math.random()+1),Math.round(4*Math.random()+1),Math.round(4*Math.random()+1)],[Math.round(4*Math.random()+1),Math.round(4*Math.random()+1),Math.round(4*Math.random()+1),Math.round(4*Math.random()+1),Math.round(4*Math.random()+1),Math.round(4*Math.random()+1),Math.round(4*Math.random()+1),Math.round(4*Math.random()+1),Math.round(4*Math.random()+1),Math.round(4*Math.random()+1)],[Math.round(4*Math.random()+1),Math.round(4*Math.random()+1),Math.round(4*Math.random()+1),Math.round(4*Math.random()+1),Math.round(4*Math.random()+1),Math.round(4*Math.random()+1),Math.round(4*Math.random()+1),Math.round(4*Math.random()+1),Math.round(4*Math.random()+1),Math.round(4*Math.random()+1)],[Math.round(4*Math.random()+1),Math.round(4*Math.random()+1),Math.round(4*Math.random()+1),Math.round(4*Math.random()+1),Math.round(4*Math.random()+1),Math.round(4*Math.random()+1),Math.round(4*Math.random()+1),Math.round(4*Math.random()+1),Math.round(4*Math.random()+1),Math.round(4*Math.random()+1)],[Math.round(4*Math.random()+1),Math.round(4*Math.random()+1),Math.round(4*Math.random()+1),Math.round(4*Math.random()+1),Math.round(4*Math.random()+1),Math.round(4*Math.random()+1),Math.round(4*Math.random()+1),Math.round(4*Math.random()+1),Math.round(4*Math.random()+1),Math.round(4*Math.random()+1)],[Math.round(4*Math.random()+1),Math.round(4*Math.random()+1),Math.round(4*Math.random()+1),Math.round(4*Math.random()+1),Math.round(4*Math.random()+1),Math.round(4*Math.random()+1),Math.round(4*Math.random()+1),Math.round(4*Math.random()+1),Math.round(4*Math.random()+1),Math.round(4*Math.random()+1)],[Math.round(4*Math.random()+1),Math.round(4*Math.random()+1),Math.round(4*Math.random()+1),Math.round(4*Math.random()+1),Math.round(4*Math.random()+1),Math.round(4*Math.random()+1),Math.round(4*Math.random()+1),Math.round(4*Math.random()+1),Math.round(4*Math.random()+1),Math.round(4*Math.random()+1)]],voxels=[],bounds=[],modes=[],voxcolbulltempnum,x,y,z,mode="block",spawnz=map.length/2,spawnx=map[Math.round(spawnz)].length/2,spawny=map[Math.round(spawnz)-1][Math.round(spawnx)-1],bullblockgeometry=new THREE.BoxGeometry(1,1,1),bullblockmaterial=new THREE.MeshLambertMaterial({color:16777215}),bullport1geometry=new THREE.SphereGeometry(.1),bullport1material=new THREE.MeshLambertMaterial({color:16763904}),bullport2geometry=new THREE.SphereGeometry(.1),bullport2material=new THREE.MeshLambertMaterial({color:52479}),bullrestoregeometry=new THREE.SphereGeometry(.1),bullrestorematerial=new THREE.MeshLambertMaterial({color:0}),bulldestroygeometry=new THREE.SphereGeometry(.1),bulldestroymaterial=new THREE.MeshLambertMaterial({color:16711680}),bullets=[],bullarrindexnum=0,lastLoop=new Date,sensitivity=.005,fps,thisLoop=new Date,gravBool=!1,jumpable=!1,velocity=new THREE.Vector3(0,0,0),gravPressed=!1;sun.position.set(0,1,0),scene.add(sun),sun.shadowCameraNear=.01,sun.castShadow=!0,sun.shadowDarkness=.5,sunneg.position.set(0,1,0),scene.add(sunneg),sunneg.shadowCameraNear=.01,sunneg.castShadow=!0,sunneg.shadowDarkness=.5,sunpos.position.set(0,1,0),scene.add(sunpos),sunpos.shadowCameraNear=.01,sunpos.castShadow=!0,sunpos.shadowDarkness=.5,initialRender(),camera.position.set(spawnx-.5,spawny+1.75,spawnz-.5);var Key={_pressed:{},G:71,E:69,R:82,A:65,W:87,D:68,S:83,LEFT:37,UP:38,RIGHT:39,DOWN:40,SPACE:32,SHIFT:16,ONE:49,TWO:50,THREE:51,FOUR:52,FIVE:53,isDown:function(o){return this._pressed[o]},onKeydown:function(o){this._pressed[o.keyCode]=!0},onKeyup:function(o){delete this._pressed[o.keyCode]}},onMouseMove=function(o){var t=o.movementX||o.mozMovementX||o.webkitMovementX||0,e=o.movementY||o.mozMovementY||o.webkitMovementY||0;camera.rotation.y-=t*sensitivity,camera.rotation.x-=e*sensitivity,camera.rotation.x<-Math.PI/2&&(camera.rotation.x=-Math.PI/2),camera.rotation.x>Math.PI/2&&(camera.rotation.x=Math.PI/2)};canvas.requestPointerLock=canvas.requestPointerLock||canvas.mozRequestPointerLock||canvas.webkitRequestPointerLock,document.exitPointerLock=document.exitPointerLock||document.mozExitPointerLock||document.webkitExitPointerLock,window.onclick=function(){canvas.requestPointerLock()},document.addEventListener("pointerlockchange",lockChangeAlert,!1),document.addEventListener("mozpointerlockchange",lockChangeAlert,!1),document.addEventListener("webkitpointerlockchange",lockChangeAlert,!1);var render=function(){if(thisLoop=new Date,fps=1e3/(thisLoop-lastLoop),lastLoop=thisLoop,requestAnimationFrame(render),renderer.render(scene,camera),sunAngle+=Math.PI/600/fps,sun.position.set(Math.sin(sunAngle),Math.cos(sunAngle),0),sunneg.position.set(Math.sin(sunAngle),Math.cos(sunAngle),-1),sunpos.position.set(Math.sin(sunAngle),Math.cos(sunAngle),1),Key.isDown(Key.ONE)&&(mode="port1"),Key.isDown(Key.TWO)&&(mode="port2"),Key.isDown(Key.THREE)&&(mode="block"),Key.isDown(Key.FOUR)&&(mode="restore"),Key.isDown(Key.FIVE)&&(mode="destroy"),Key.isDown(Key.W)&&testCol(camera.position.x-2*(Math.sin(this.camera.rotation.y)/fps),camera.position.y-1.75,camera.position.z-2*(Math.cos(this.camera.rotation.y)/fps))&&testCol(camera.position.x-2*(Math.sin(this.camera.rotation.y)/fps),camera.position.y,camera.position.z-2*(Math.cos(this.camera.rotation.y)/fps))&&(this.camera.position.x-=2*Math.sin(this.camera.rotation.y)/fps,this.camera.position.z-=2*Math.cos(this.camera.rotation.y)/fps),Key.isDown(Key.A)&&testCol(camera.position.x-2*(Math.sin(this.camera.rotation.y+Math.PI/2)/fps),camera.position.y-1.75,camera.position.z-2*(Math.cos(this.camera.rotation.y+Math.PI/2)/fps))&&testCol(camera.position.x-2*(Math.sin(this.camera.rotation.y+Math.PI/2)/fps),camera.position.y,camera.position.z-2*(Math.cos(this.camera.rotation.y+Math.PI/2)/fps))&&(this.camera.position.x-=2*Math.sin(this.camera.rotation.y+Math.PI/2)/fps,this.camera.position.z-=2*Math.cos(this.camera.rotation.y+Math.PI/2)/fps),Key.isDown(Key.S)&&testCol(camera.position.x+2*(Math.sin(this.camera.rotation.y)/fps),camera.position.y-1.75,camera.position.z+2*(Math.cos(this.camera.rotation.y)/fps))&&testCol(camera.position.x+2*(Math.sin(this.camera.rotation.y)/fps),camera.position.y,camera.position.z+2*(Math.cos(this.camera.rotation.y)/fps))&&(this.camera.position.x+=2*Math.sin(this.camera.rotation.y)/fps,this.camera.position.z+=2*Math.cos(this.camera.rotation.y)/fps),Key.isDown(Key.D)&&testCol(camera.position.x-2*(Math.sin(this.camera.rotation.y-Math.PI/2)/fps),camera.position.y-1.75,camera.position.z-2*(Math.cos(this.camera.rotation.y-Math.PI/2)/fps))&&testCol(camera.position.x-2*(Math.sin(this.camera.rotation.y-Math.PI/2)/fps),camera.position.y,camera.position.z-2*(Math.cos(this.camera.rotation.y-Math.PI/2)/fps))&&(this.camera.position.x-=2*Math.sin(this.camera.rotation.y-Math.PI/2)/fps,this.camera.position.z-=2*Math.cos(this.camera.rotation.y-Math.PI/2)/fps),Key.isDown(Key.SPACE)&&(gravBool||testCol(camera.position.x,camera.position.y+2/fps,camera.position.z)&&(this.camera.position.y+=2/fps),gravBool&&jumpable&&(velocity.y+=25/fps,jumpable=!1)),Key.isDown(Key.SHIFT)&&(gravBool||testCol(camera.position.x,camera.position.y-2/fps-1.75,camera.position.z)&&(this.camera.position.y-=2/fps)),gravBool&&(0!=velocity.y&&console.log(velocity),testCol(camera.position.x+velocity.x,camera.position.y-1.75,camera.position.z)&&(camera.position.x+=velocity.x),testCol(camera.position.x,camera.position.y-1.75,camera.position.z+velocity.z/fps)&&(camera.position.z+=velocity.z),testCol(camera.position.x,camera.position.y-1.75+velocity.y,camera.position.z)&&(camera.position.y+=velocity.y),testCol(camera.position.x,camera.position.y-1.75+velocity.y,camera.position.z)||(jumpable=!0,velocity.y=0),testCol(camera.position.x,camera.position.y-1.75-3.711/fps,camera.position.z)&&(velocity.y-=3.711/fps)),Key.isDown(Key.G)&&(gravPressed||(gravBool=!gravBool,jumpable=!1,velocity.set(0,0,0),gravPressed=!0)),Key.isDown(Key.G)||(gravPressed=!1),Key.isDown(Key.R)){camera.rotation.set(0,0,0);var o=map.length/2,t=map[Math.round(o)].length/2,e=map[Math.round(o)-1][Math.round(t)-1];for(camera.position.set(t-.5,e+1.75,o-.5),bullremovecounter=0;bullremovecounter<=bullets.length;bullremovecounter++)scene.remove(bullets[bullremovecounter]);bullets=[],modes=[],bullarrindexnum=0}for(this.camera.rotation.order="YXZ",counter=0;counter<bullets.length;counter++)testCol(bullets[counter].position.x-5*Math.sin(bullets[counter].rotation.y)/fps,bullets[counter].position.y+5*Math.tan(bullets[counter].rotation.x)/fps,bullets[counter].position.z-5*Math.cos(bullets[counter].rotation.y)/fps)?(bullets[counter].position.x-=5*Math.sin(bullets[counter].rotation.y)/fps,bullets[counter].position.y+=5*Math.tan(bullets[counter].rotation.x)/fps,bullets[counter].position.z-=5*Math.cos(bullets[counter].rotation.y)/fps):("port1"==modes[counter]&&(voxcolbulltempnum=findCol(bullets[counter].position.x-5*Math.sin(bullets[counter].rotation.y)/fps,bullets[counter].position.y+5*Math.tan(bullets[counter].rotation.x)/fps,bullets[counter].position.z-5*Math.cos(bullets[counter].rotation.y)/fps),voxels[voxcolbulltempnum].material=new THREE.MeshLambertMaterial({color:16763904}),scene.remove(bullets[counter]),bullets.splice(counter,1),modes.splice(counter,1),bullarrindexnum--),"port2"==modes[counter]&&(voxcolbulltempnum=findCol(bullets[counter].position.x-5*Math.sin(bullets[counter].rotation.y)/fps,bullets[counter].position.y+5*Math.tan(bullets[counter].rotation.x)/fps,bullets[counter].position.z-5*Math.cos(bullets[counter].rotation.y)/fps),voxels[voxcolbulltempnum].material=new THREE.MeshLambertMaterial({color:52479}),scene.remove(bullets[counter]),bullets.splice(counter,1),modes.splice(counter,1),bullarrindexnum--),"restore"==modes[counter]&&(voxcolbulltempnum=findCol(bullets[counter].position.x-5*Math.sin(bullets[counter].rotation.y)/fps,bullets[counter].position.y+5*Math.tan(bullets[counter].rotation.x)/fps,bullets[counter].position.z-5*Math.cos(bullets[counter].rotation.y)/fps),restoration(voxcolbulltempnum),scene.remove(bullets[counter]),bullets.splice(counter,1),modes.splice(counter,1),bullarrindexnum--),"destroy"==modes[counter]&&(voxcolbulltempnum=findCol(bullets[counter].position.x-5*Math.sin(bullets[counter].rotation.y)/fps,bullets[counter].position.y+5*Math.tan(bullets[counter].rotation.x)/fps,bullets[counter].position.z-5*Math.cos(bullets[counter].rotation.y)/fps),scene.remove(voxels[voxcolbulltempnum]),voxels.splice(voxcolbulltempnum,1),initColours.splice(voxcolbulltempnum,1),scene.remove(bullets[counter]),bullets.splice(counter,1),modes.splice(counter,1),bullarrindexnum--),"block"==modes[counter]&&(initColours[voxels.length]=3,voxels[voxels.length]=new THREE.Mesh(voxgeometry,voxmaterial),scene.add(voxels[voxels.length-1]),voxels[voxels.length-1].castShadow=!0,voxels[voxels.length-1].receiveShadow=!0,voxels[voxels.length-1].position.set(Math.round(bullets[counter].position.x),Math.round(bullets[counter].position.y),Math.round(bullets[counter].position.z)),scene.remove(bullets[counter]),bullets.splice(counter,1),modes.splice(counter,1),bullarrindexnum--))};render();